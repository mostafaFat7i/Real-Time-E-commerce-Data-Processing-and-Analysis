# -*- coding: utf-8 -*-
"""Data_visualization_from_hdfs_FV.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1vuUXm_t1CiU-Bc_CEZNV5C7bClvmUa7q
"""

from pyspark.sql import SparkSession
from pyspark.sql.functions import col, sum, rank
from pyspark.sql.window import Window
import matplotlib.pyplot as plt
import seaborn as sns

# Initialize Spark session
spark = SparkSession.builder.appName("InvoiceSummary").getOrCreate()

# Define HDFS path
hdfs_path = "hdfs://namenode:9000/project/aggregated_data"

# Load JSON files into a DataFrame
df = spark.read.json(hdfs_path)

# Filter out rows with TotalPrice <= 0 and CustomerID is not "NaN"
df = df.filter((col("TotalPrice") > 0) & (col("TotalQuantity") > 0) & (col("CustomerID").isNotNull()) & (col("CustomerID") != "\"NaN\""))

# Group by InvoiceNo and calculate total price and quantity for each group
total_price_per_invoice = df_filtered.groupBy("InvoiceNo", "Country", "CustomerID").agg(expr("sum(TotalPrice) as TotalPrice"), expr("sum(TotalQuantity) as TotalQuantity"))


# Repartition to a single partition and save the result to a CSV file
result_csv_path = "/home/charts/total_price_per_invoice_csv"
total_price_per_invoice.coalesce(1).write.csv(result_csv_path, header=True, mode="overwrite")

# Pie Chart: Display statistics of invoices in each country
country_stats = df.groupBy("Country").count().toPandas()
plt.figure(figsize=(10, 6))
plt.pie(country_stats["count"], labels=country_stats["Country"], autopct='%1.1f%%')
plt.title("Invoice Distribution by Country")
plt.savefig("/home/charts/invoice_distribution_pie_chart.png")
plt.close()

# Bar Chart: Display total price for highest 3 CustomerIDs in each country with different colors
top_customers = df.groupBy("Country", "CustomerID").agg(sum("TotalPrice").alias("TotalPrice"))
window_spec = Window.partitionBy("Country").orderBy(col("TotalPrice").desc())
ranked_customers = top_customers.withColumn("rank", rank().over(window_spec))
top3_customers = ranked_customers.filter(col("rank") <= 3).toPandas()

# Set seaborn style for better aesthetics
sns.set(style="whitegrid")

plt.figure(figsize=(12, 8))
ax = sns.barplot(x="CustomerID", y="TotalPrice", hue="Country", data=top3_customers, palette="viridis")
ax.set(xlabel="CustomerID", ylabel="Total Price", title="Total Price for Top 3 CustomerIDs in Each Country")
plt.savefig("/home/charts/top3_customers_bar_chart.png")
plt.close()

# Stop Spark session
spark.stop()